@model Homework6.Models.ImportersViewModel.ViewModel

@{
    ViewBag.Title = "Details";
}


<div>
    <div class="col-md-6">
        @*This the section of the view that contains personal information.*@
        <div class="row" id="description">
            <h3 id="Person-info">@Model.Person.FullName</h3>
            <dl class="dl-horizontal">
                <dt>@Html.Label("preferred-name", "Preferred Name:")</dt>
                <dd>@Html.DisplayFor(model => model.Person.PreferredName)</dd>

                <dt>@Html.Label("phone-number", "Phone Number:")</dt>
                <dd>@Html.DisplayFor(model => model.Person.PhoneNumber)</dd>

                <dt>@Html.Label("fax-number", "Fax Number:")</dt>
                <dd>@Html.DisplayFor(model => model.Person.FaxNumber)</dd>

                <dt>@Html.Label("email-address", "Email Address:")</dt>
                <dd>
                    <a href="mailto:@Html.DisplayFor(model => model.Person.EmailAddress)">@Html.DisplayFor(model => model.Person.EmailAddress)</a>
                </dd>

                <dt>@Html.Label("member-since", "Member Since:")</dt>
                <dd>@Html.DisplayFor(model => model.Person.ValidFrom)</dd>
            </dl>
        </div>
        <br />

        @*This the the section of the view that contains company information.*@
        <div class="row" id="description"></div>
        @if (ViewBag.SomeBody == true)
        {
            <h3 id="Company-info">Company Profile</h3>

            <dl class="dl-horizontal">
                <dt>@Html.Label("customer-name", "Customer Name:")</dt>
                <dd>@Html.DisplayFor(model => model.Customer.CustomerName)</dd>

                <dt>@Html.Label("phone-number", "Phone Number:")</dt>
                <dd>@Html.DisplayFor(model => model.Customer.PhoneNumber)</dd>
                
                <dt>@Html.Label("fax-number", "Fax Number:")</dt>
                <dd>@Html.DisplayFor(model => model.Customer.FaxNumber)</dd>

                <dt>@Html.Label("website-url", "Website URL:")</dt>
                <dd>
                    <a href="@Model.Customer.WebsiteURL">@Html.DisplayFor(model => model.Customer.WebsiteURL)</a>
                </dd>

                <dt>@Html.Label("member-since", "Member Since:")</dt>
                <dd>@Html.DisplayFor(model => model.Customer.ValidFrom)</dd>
            </dl>
            <br />

            @*This is the section of the view that contains the purchase information.*@
            <h3 class="row" id="Company-info">Purchase History Summary</h3>
            <dl class="dl-horizontal">

                <dt> @Html.Label("order-count", "Count:") </dt>
                <dd> @Html.DisplayFor(model => model.Customer.Orders.Count) </dd>

                <dt> @Html.Label("gross-sales", "Gross Sales:") </dt>
                <dd> @String.Format("{0:C}", ViewBag.GrossSales) </dd>

                <dt> @Html.Label("gross-profit", "Gross Profit:") </dt>
                @*When this isn't returning a value properly. I continue to get a argument null exception.*@
                <dd> @String.Format("{0:C}", ViewBag.GrossProfits) </dd>

            </dl>
            <br />

            @*This is the section of the view that contains the top 10 purchase items.*@
            <div class="row" id="description">
                <h3 id="purchase-info">Items Purchased</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">
                                @Html.Label("stock-item", "Stock Item ID")
                            </th>
                            <th scope="col">
                                @Html.Label("description", "Description")
                            </th>
                            <th scope="col">
                                @Html.Label("line-profit", "Line Profit")
                            </th>
                            <th scope="col">
                                @Html.Label("sales-person", "Sales Person")
                            </th>
                        </tr>
                    </thead>

                    @foreach (var items in Model.InvoiceLine)
                    {
                        <tbody>
                            <tr>
                                <td>@Html.DisplayFor(item => items.StockItemID)</td>

                                <td>@Html.DisplayFor(item => items.Description)</td>

                                <td>@String.Format("{0:C}", items.LineProfit)</td>

                                <td>@Html.DisplayFor(item => items.Invoice.Person4.FullName)</td>
                            </tr>
                        </tbody>
                    }
                </table>
            </div>
        }
    </div>

    <div class="col-md-6">
        <div class="row">
            <a href="https://placeholder.com"><img src="https://via.placeholder.com/150" /></a>
        </div>
        <br />

        @*
        <div class="row" id="description">
            <div id="map" style="width:650px; height:300px;"> </div>
            <script>
                var longitude = @Model.Customer.DeliveryLocation.Longitude;
                var latitude = @Model.Customer.DeliveryLocation.Latitude;

                var map = L.map('map').setView([latitude, longitude], 13);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                L.marker([lat, long]).addTo(map)
                    .bindPopup('<p>' + @Model.Customer.City.CityName + '</p>').openPopup();
            </script>
        </div>
        *@

    </div>
</div>
<br />

<div class="row">
    <p class="col-lg-12">
        @Html.ActionLink("Back to Search", "Index")
    </p>
</div>